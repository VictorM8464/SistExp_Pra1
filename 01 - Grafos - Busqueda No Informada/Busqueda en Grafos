from collections import deque

class SistemaTransporte:
    def __init__(self):
        self.mapa = {
            'Casa': ['Escuela', 'Parque'],
            'Escuela': ['Casa', 'Trabajo', 'Centro Comercial'],
            'Parque': ['Casa', 'Gimnasio'],
            'Trabajo': ['Escuela', 'Restaurante'],
            'Centro Comercial': ['Escuela'],
            'Gimnasio': ['Parque'],
            'Restaurante': ['Trabajo']
        }

    def bfs(self, inicio, objetivo):
        visitado = set()
        cola = deque()
        cola.append((inicio, [inicio]))

        while cola:
            lugar_actual, ruta_actual = cola.popleft()
            if lugar_actual == objetivo:
                return ruta_actual
            if lugar_actual not in visitado:
                visitado.add(lugar_actual)
                for vecino in self.mapa[lugar_actual]:
                    cola.append((vecino, ruta_actual + [vecino]))

        return None

# Instancia de la clase SistemaTransporte
sistema = SistemaTransporte()

# Mostrar opciones disponibles al usuario
print("Opciones disponibles:")
for lugar in sistema.mapa.keys():
    print("-", lugar)

# Pedir al usuario la ubicación inicial y final
inicio = input("\nDonde estas ahora? ")
objetivo = input("A donde quieres ir? ")

# Encontrar la ruta más corta
ruta = sistema.bfs(inicio, objetivo)

# Imprimir la ruta encontrada
if ruta:
    print("La ruta mas corta es:", ruta)
else:
    print("No se encontra una ruta.")
